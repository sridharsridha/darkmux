run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
           sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
##  Tmux Configuration
# Install tpm if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'odedlaz/tmux-onedark-theme'
# set -g @plugin "egel/tmux-gruvbox"
# set -g @plugin 'tonylambiris/palenight-tmux'
# set -g @plugin 'dmitry-kabanov/tmux-statusline-themes'
set -g @plugin 'srcery-colors/srcery-tmux'
set -g @srcery_tmux_patched_font '1'

# Plugin Configuration
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_prefix_prompt '⌘'
set -g @prefix_highlight_copy_prompt '⋐'

set -ga terminal-overrides ",screen-256color:Tc"
set -g default-terminal "screen-256color"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# Use xterm keycodes for Shift-F1 etc (for Vim).
set-window-option -g xterm-keys on


# Change prefix key to <space>
unbind-key C-a
unbind-key C-b
unbind-key C-Space
set-option -g prefix C-Space  # first prefix

# Re-number windows when one is closed
set -g renumber-windows on

# Set ability to capture on start and restore on exit window data when running
# an application.
setw -g alternate-screen on

# Automatic rename enabled by default.
setw -g automatic-rename on

# Start windows and panes at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# Use vim keybindings in copy mode or choice mode
set-window-option -g mode-keys vi

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Config for vim-like movements using vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j) || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k)  || tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || tmux select-pane -R"

# Resize panes like vim using vim-tmux-resize
bind -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U 5"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D 5"

# create new window using the same folder path as previous window
bind c new-window      -c "#{pane_current_path}"
bind g split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

bind p previous-window
bind n next-window
bind "'" choose-window

bind -r Tab last-window

# swap window
bind < swap-window -t -1
bind > swap-window -t +1

# trigger copy mode by
bind-key Escape copy-mode # enter to scroll mode

# setup mouse
# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
    'set -g mouse on' \
    'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

